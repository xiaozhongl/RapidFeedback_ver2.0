/LoginServlet

POST
{
    username: String    // this key is named as email in RegisterServlet
    password:   String
}
response
{
    login_ACK: // >0 id :succeed/ 0: wrong password/ -1: no email address in database/ -2: db/servlet error
    projectList: ArrayList<Project>
    firstName:  String
    token:  String
}


/RegisterServlet

POST
{
    email:
    password:
    firstName:
    middleName:
    lastName:
}

response
{
    id: > 0 if success, 0 if database error, -1 if username exists
}


/AddStudentServlet 

To add student into a project
POST
{
    token: String
    projectId:
    studentList:   // ArrayList<Student>
}
response
{
    updateStudent_ACK: int //1 if all students are added successfully
	 		   //0 if SQL exception
			   //-studentNumber if the student information is illegal
}

/CriteriaListServlet

POST
{
    token: String
    projectId: String
    criteriaList: 
    
}
response
{
    updateProject_ACK: boolean  // all added or not
}


/DeleteProjectServlet
POST 
{
    token: String
    projectId:
}
response
{
    updateProject_ACK: boolean
}

/DeleteStudentServlet

to delete a student of a specific project
POST
{
    token: String
    projectId: int
    studentId: int   // primary key of student
}
response
{
    updateStudent_ACK: boolean
}


/EditStudentServlet
POST
{
    token: String
    studentId: int    // primary key of student
    firstName: String
    middleName: String
    lastName:  String
    studentNumber: int 
    email: String   // student's email
}
response
{
    updateStudent_ACK: boolean
}

/GroupStudentServlet
POST
{
    token: String
    projectId:
    studentId: int
    group: int
}
response
{
    updateStudent_ACK: boolean
}



/InviteAssessorServlet
POST
{
    token: String
    projectId: int
    markerId: int
}
response
{
    invite_ACK: int
    markerName: 
}

DELETE
{
    token: String
    projectId: int
    markerId: int
}
response
{
    invite_ACK: boolean
}

/AddResultServlet
POST
{
    token: String
    projectId: 
    studentId: 
    remark: Remark object
}
response
{
    ACK: boolean
}

/FinalResultServlet
POST
{
    token: String
    projectId: String
    studentId: String
    finalScore:
    finalRemark:
}
response
{
    mark_AC: boolean
}

/SendEmailServlet

POST
{
    token: String
    projectId: 
    studentId: 
    sendBoth: int
}
response
{
    sendMail_ACK: boolean
}

/UpdateProject_About_Servlet

request to edit the project time setting info
POST
{
    token: String
    id:	// when create a project, set id to 0; when update, give project id
    projectName: String
    subjectName: String
    subjectCode: String
    description: String
    durationSec: int
    warningSec: int
    principalId: int
}
response
{
    updateProject_ACK: boolean
    projectId: int
}

/SyncProjectListServlet
request for the project list
POST
{
    token: String
    userId: 
}
response
{
    syn_ACK: boolean
    projectList: ArrayList<Project>
}